//
//  main.c
//  alg_practice
//
//  Created by RUAN on 2021/06/07.
//

#include <stdio.h>
#include <stdlib.h>

#define SIZE 6
#define max(x,y) ((x)>(y) ? (x):(y))
#define min(x,y) ((x)<(y) ? (x):(y))

int Hotel[SIZE] = {0,2,5,1,5,0};
int Flight[SIZE] = {0,1,3,6,11,17};

typedef struct Spot{
    int num;
    struct Spot* next;
} SpotNode;

typedef struct{
    SpotNode* start;
    SpotNode* end;
} SpotType;

void init(SpotType* s){
    s->start->next = s->end;
    s->end->next = NULL;
}

void insertSpot(SpotType* s){
    SpotNode* p = (SpotNode*)malloc(sizeof(SpotNode));
    SpotNode* x = s->start;
    for(int i=0; i<SIZE; i++){
        x->next = p;
        p->num = i;
        p->next = s->end;
    }
}

int main(){
    
    
    return 0;
}


